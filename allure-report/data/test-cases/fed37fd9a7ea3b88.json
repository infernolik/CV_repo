{"uid":"fed37fd9a7ea3b88","name":"test_post_book","fullName":"tests.test_api_negative#test_post_book","historyId":"bacfd4a03062b3a673c5c32d52e8ba1d","time":{"start":1759920041000,"stop":1759920041889,"duration":889},"status":"failed","statusMessage":"AssertionError: \u001B[31mFAILURE: \u001B[0massert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[31mtest_api_negative.py\u001B[0m:57 in test_post_book() -> with check:\n\u001B[31mtest_api_negative.py\u001B[0m:58 in test_post_book -> assert response.status_code == 400\n\u001B[31mAssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[0m\n\n------------------------------------------------------------\nFailed Checks: 1","statusTrace":"\u001B[31mFAILURE: \u001B[0massert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[31mtest_api_negative.py\u001B[0m:57 in test_post_book() -> with check:\n\u001B[31mtest_api_negative.py\u001B[0m:58 in test_post_book -> assert response.status_code == 400\n\u001B[31mAssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[0m\n\n------------------------------------------------------------\nFailed Checks: 1","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"book_api_client","time":{"start":1759920041000,"stop":1759920041000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: \u001B[31mFAILURE: \u001B[0massert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[31mtest_api_negative.py\u001B[0m:57 in test_post_book() -> with check:\n\u001B[31mtest_api_negative.py\u001B[0m:58 in test_post_book -> assert response.status_code == 400\n\u001B[31mAssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[0m\n\n------------------------------------------------------------\nFailed Checks: 1","statusTrace":"\u001B[31mFAILURE: \u001B[0massert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[31mtest_api_negative.py\u001B[0m:57 in test_post_book() -> with check:\n\u001B[31mtest_api_negative.py\u001B[0m:58 in test_post_book -> assert response.status_code == 400\n\u001B[31mAssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n\u001B[0m\n\n------------------------------------------------------------\nFailed Checks: 1","steps":[{"name":"Request body","time":{"start":1759920041000,"stop":1759920041000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Sending incomplete booking request","time":{"start":1759920041000,"stop":1759920041883,"duration":883},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Assertions","time":{"start":1759920041883,"stop":1759920041888,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Negative testing"},{"name":"feature","value":"CRUD operations"},{"name":"epic","value":"API Client"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api_negative"},{"name":"host","value":"DESKTOP-H6JKBAG"},{"name":"thread","value":"11576-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api_negative"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"fed37fd9a7ea3b88.json","parameterValues":[]}